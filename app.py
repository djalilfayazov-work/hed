from aiogram       import Bot, Dispatcher, executor
from aiogram.types import Message, CallbackQuery
from random        import randint, choice
from time          import sleep

from config        import Settings
from database      import DataBase
from markups       import Keyboard

from aiogram.types import ReplyKeyboardMarkup as km, KeyboardButton as kb
from aiogram.types import InlineKeyboardMarkup as im, InlineKeyboardButton as ib

""" --------------------------------------------------- """

conf = Settings()
db   = DataBase()
menu = Keyboard()

bot  = Bot(conf.token, parse_mode='html')
dp   = Dispatcher(bot)

""" --------------------------------------------------- """


@dp.message_handler(commands=['start'])
async def start(msg: Message):
    chat = msg.chat

    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            await msg.answer(
                conf.read('hello').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )


@dp.message_handler(commands=['potions'])
async def potions(msg: Message):
    chat = msg.chat

    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            pass


@dp.message_handler(content_types=['text'])
async def get_text(msg: Message):
    chat = msg.chat

    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:

            match msg.text:
                case 'ü¶î –ú–æ–π —ë–∂':
                    hed_values = db.get(chat.id, 'users', '*')[1::]

                    hed_values.append(conf.weapon.get(db.get(chat.id, 'users', 'weapon')[0]))
                    hed_values.append(conf.armor.get(db.get(chat.id, 'users', 'armor')[0]))
                    hed_values.append(conf.pick.get(db.get(chat.id, 'users', 'pick')[0]))
                    hed_values.append(conf.row.get(db.get(chat.id, 'users', 'row')[0]))

                    await msg.answer(
                        conf.read('profile').format(
                            chat.id, chat.first_name,
                            *hed_values
                        )
                    )

                case 'üë£ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ':
                    await msg.answer(
                        '–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—Ç–æ',
                        reply_markup=menu.Move.markup
                    )

                case 'üîô –ì–ª–∞–≤–Ω–∞—è':
                    await msg.answer(
                        '–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
                        reply_markup=menu.Main.markup
                    )


                case '‚õ∫Ô∏è –õ–∞–≥–µ—Ä—å':
                    db.set(chat.id, 'users', 'lock', '–õ–∞–≥–µ—Ä—å')
                    await msg.answer(
                        '–í—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∏—Å—å –≤ –ª–∞–≥–µ—Ä—å',
                        reply_markup=menu.Profile.markup
                    )

                case 'üì¶ –°–∫–ª–∞–¥':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                        inventory = [i for i in db.get(chat.id, 'items', '*')][1::]
                        inventory += [i for i in db.get(chat.id, 'potions', '*')][1::]
                        inventory += [i for i in db.get(chat.id, 'hunter', '*')][1::]
                        inventory += [i for i in db.get(chat.id, 'mine', '*')][1::]

                        await bot.send_message(
                            chat.id,
                            conf.read('inventory').format(
                                *inventory
                            )
                        )


                case 'üå≤ –í –ª–µ—Å':
                    db.set(chat.id, 'users', 'lock', '–õ–µ—Å')
                    await msg.answer(
                        '–í—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∏—Å—å –≤ –ª–µ—Å',
                        reply_markup=km(resize_keyboard=True, keyboard=[
                            [kb('–î–æ–±—ã—Ç—å —Ä–µ—Å—É—Ä—Å—ã')],
                            [kb('üë£ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ'), kb('üîô –ì–ª–∞–≤–Ω–∞—è')]
                        ])
                    )

                case '–î–æ–±—ã—Ç—å —Ä–µ—Å—É—Ä—Å—ã':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–µ—Å':
                        get_hp = db.get(chat.id, 'users', 'hp')[0]
                        if get_hp > 25:
                            items = [
                                [
                                    choice(conf.items.get('usual')), randint(1, 6)
                                ],
                                [
                                    choice(conf.items.get('usual')), randint(1, 5)
                                ],
                                [
                                    choice(conf.items.get('rare')), randint(1, 4)
                                ],
                                [
                                    choice(conf.items.get('uprare')), randint(1, 3)
                                ]
                            ]

                            text = conf.read('hed').format(
                                chat.first_name,

                                items[0][0], items[0][1],
                                items[1][0], items[1][1],
                                items[2][0], items[2][1],

                                conf.emoji.get(items[0][0]),
                                conf.emoji.get(items[1][0]),
                                conf.emoji.get(items[2][0])
                            )

                            db.add_item(chat.id, items[0][0], 'items', items[0][1])
                            db.add_item(chat.id, items[1][0], 'items', items[1][1])
                            db.add_item(chat.id, items[2][0], 'items', items[2][1])

                            if not choice([True, True, True, True, False]):
                                text += '\n{0}<b>{1}</b> ‚Äî {2}'.format(
                                    conf.emoji.get(items[3][0]),
                                    items[3][0], items[3][1]
                                )
                                db.add_item(chat.id, items[3][0], 'items', items[3][1])

                            minch = randint(1, 4)

                            if minch == 4:
                                armor = conf.armor.get(db.get(chat.id, 'users', 'armor')[0])

                                if armor == 0:
                                    hp = randint(6, 7)
                                    text += f'\n\n–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –æ—á–∫–æ–∏ –∂–∏–∑–Ω–∏ : {hp}üñ§'
                                    db.set_field(
                                        chat.id, 'hp', 'users',
                                        db.get(chat.id, 'users', 'hp')[0] - hp
                                    )

                                if armor == 50:
                                    hp = randint(5, 6)
                                    text += f'\n\n–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –æ—á–∫–æ–∏ –∂–∏–∑–Ω–∏ : {hp}üñ§'
                                    db.set_field(
                                        chat.id, 'hp', 'users',
                                        db.get(chat.id, 'users', 'hp')[0] - hp
                                    )
                                if armor == 100:
                                    hp = randint(4, 5)
                                    text += f'\n\n–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –æ—á–∫–æ–∏ –∂–∏–∑–Ω–∏ : {hp}üñ§'
                                    db.set_field(
                                        chat.id, 'hp', 'users',
                                        db.get(chat.id, 'users', 'hp')[0] - hp
                                    )
                                if armor == 250:
                                    hp = randint(3, 4)
                                    text += f'\n\n–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –æ—á–∫–æ–∏ –∂–∏–∑–Ω–∏ : {hp}üñ§'
                                    db.set_field(
                                        chat.id, 'hp', 'users',
                                        db.get(chat.id, 'users', 'hp')[0] - hp
                                    )
                                if armor == 320:
                                    hp = randint(1, 3)
                                    text += f'\n\n–í—ã –ø–æ—Ç–µ—Ä—è–ª–∏ –æ—á–∫–æ–∏ –∂–∏–∑–Ω–∏ : {hp}üñ§'
                                    db.set_field(
                                        chat.id, 'hp', 'users',
                                        db.get(chat.id, 'users', 'hp')[0] - hp
                                    )

                            await bot.send_message(
                                chat.id,
                                text
                            )
                        else:
                            await bot.send_message(
                                chat.id,
                                f'–ú–∞–ª–æ –æ—á–∫–æ–≤ –∑–¥–æ—Ä–æ–≤—å—è üñ§ [{get_hp}]\n–°–≤–∞—Ä–∏—Ç–µ –∑–µ–ª—å–µ –∞—Å—Ü–∏–¥–∏–µ–≤–æ–π –∂–∏–∑–Ω–∏!'
                            )


                case '‚õè –í —à–∞—Ö—Ç—É':
                    db.set(chat.id, 'users', 'lock', '–®–∞—Ö—Ç–∞')
                    await msg.answer(
                        '–í—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∏—Å—å –≤ —à–∞—Ö—Ç—É',
                        reply_markup=km(resize_keyboard=True, keyboard=[
                            [kb('–î–æ–±—ã—Ç—å –º–µ—Ç–∞–ª')],
                            [kb('üë£ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ'), kb('üîô –ì–ª–∞–≤–Ω–∞—è')]
                        ])
                    )

                case '–î–æ–±—ã—Ç—å –º–µ—Ç–∞–ª':
                    if db.get(chat.id, 'users', 'lock')[0] == '–®–∞—Ö—Ç–∞':
                        pick = conf.pick.get(db.get(chat.id, 'users', 'pick')[0])

                        sleep(pick)

                        items = [
                            [
                                choice(conf.mine.get('usual')), randint(300, 500)
                            ],
                            [
                                choice(conf.mine.get('usual')), randint(300, 500)
                            ],
                            [
                                choice(conf.mine.get('rare')), randint(100, 250)
                            ],
                            [
                                choice(conf.mine.get('uprare')), randint(10, 75)
                            ]
                        ]

                        text = conf.read('hed').format(
                            chat.first_name,

                            items[0][0], items[0][1],
                            items[1][0], items[1][1],
                            items[2][0], items[2][1],

                            conf.emoji.get(items[0][0]),
                            conf.emoji.get(items[1][0]),
                            conf.emoji.get(items[2][0])
                        )

                        db.add_item(chat.id, items[0][0], 'mine', items[0][1])
                        db.add_item(chat.id, items[1][0], 'mine', items[1][1])
                        db.add_item(chat.id, items[2][0], 'mine', items[2][1])

                        if not choice([True, True, True, True, False]):
                            text += '\n{0}<b>{1}</b> ‚Äî {2}'.format(
                                conf.emoji.get(items[3][0]),
                                items[3][0], items[3][1]
                            )
                            db.add_item(chat.id, items[3][0], 'mine', items[3][1])

                        await bot.send_message(
                                chat.id,
                                text
                            )


                case 'üëª –ù–∞ –æ—Ö–æ—Ç—É':
                    db.set(chat.id, 'users', 'lock', '–ú–æ–Ω—Å—Ç—Ä—ã')
                    await msg.answer(
                        '–í—ã –ø–µ—Ä–µ–º–µ—Å—Ç–∏–ª–∏—Å—å –∫ –º–æ–Ω—Å—Ç—Ä–∞–º',
                        reply_markup=km(resize_keyboard=True, keyboard=[
                            [kb('–û—Ö–æ—Ç–∏—Ç—å—Å—è')],
                            [kb('üë£ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ'), kb('üîô –ì–ª–∞–≤–Ω–∞—è')]
                        ])
                    )

                case '–û—Ö–æ—Ç–∏—Ç—å—Å—è':
                    if db.get(chat.id, 'users', 'lock')[0] == '–ú–æ–Ω—Å—Ç—Ä—ã':
                        if randint(0, 1) == 1:  # 50/50 –ø–æ—è–≤–ª–µ–Ω–∏–µ –º–æ–±–∞
                            # –Ω–∏–∂–µ —à–∞–Ω—Å –≤ 16.6% –Ω–∞ –≤—ã–ø–∞–¥–µ–Ω–∏–µ —ç–ø–∏—á–µ—Å–∫–æ–≥–æ –ø—Ä–µ–¥–º–µ—Ç–∞
                            if not choice([True, True, True, True, True, False]):
                                item = choice(conf.mob_items.get('epic'))
                                await bot.send_message(
                                    chat.id,
                                    conf.read('mob').format(
                                        conf.mobs.get(item),
                                        item, 1, conf.emoji.get(item)
                                    )
                                )

                                db.add_item(chat.id, item, 'hunter', 1)
                            else:
                                shch = 1
                                await bot.send_message(
                                    chat.id,
                                    conf.read('mob').format(
                                        '–ö–∞–Ω—å–æ–Ω–Ω—ã–π —Ç–∞—Ä–∞–∫–∞–Ω üêú',
                                        '–®–µ—Å—Ç–µ—Ä–µ–Ω–∫–∏', shch, '‚öôÔ∏è'
                                    )
                                )

                                db.add_item(chat.id, '–®–µ—Å—Ç–µ—Ä–µ–Ω–∫–∏', 'items', shch)
                        else:
                            await bot.send_message(
                                chat.id, '–í—ã –Ω–µ –Ω–∞—à–ª–∏ –º–æ–±–æ–≤'
                            )


                case '‚ô¶Ô∏è –ê–∑–∞—Ä—Ç–Ω—ã–µ –∏–≥—Ä—ã':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                        await msg.answer(
                            '–ü–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ç—ã –∫—Ä–µ–ø–æ–∫',
                            reply_markup=km(resize_keyboard=True, keyboard=[
                                [kb('–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞'), kb('–õ–æ—Ç–µ—Ä–µ–π–Ω—ã–π –±–∏–ª–µ—Ç')],
                                [kb('üë£ –ü–µ—Ä–µ–º–µ—â–µ–Ω–∏–µ'), kb('üîô –ì–ª–∞–≤–Ω–∞—è')]
                            ])
                        )

                case '–†—É—Å—Å–∫–∞—è —Ä—É–ª–µ—Ç–∫–∞':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                        await msg.answer(
                            '–í—ã–±–µ—Ä–∏—Ç–µ —Å—É–º–º—É –¥–ª—è –∏–≥—Ä—ã',
                            reply_markup=im(row_width=2, inline_keyboard=[
                                [ib('10$', callback_data='r10'),
                                 ib('100$', callback_data='r100')],
                                [ib('500$', callback_data='r500'),
                                 ib('1000$', callback_data='r1000')],
                            ])
                        )

                case '–õ–æ—Ç–µ—Ä–µ–π–Ω—ã–π –±–∏–ª–µ—Ç':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                        await msg.answer(
                            '–•–æ—Ç–∏—Ç–µ –∫—É–ø–∏—Ç—å –±–∏–ª–µ—Ç –∑–∞ $10 ??',
                            reply_markup=im(row_width=2, inline_keyboard=[
                                [ib('–ö—É–ø–∏—Ç—å', callback_data='l10')],
                            ])
                        )


                case 'üõí –ê—É–∫—Ü–∏–æ–Ω':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                        auc = '–í—Å–µ –ø—Ä–µ–¥–º–µ—Ç—ã –Ω–∞ –∞—É–∫—Ü–∏–æ–Ω–µ:\n\n'

                        for i in db.get_auc():
                            auc += conf.read('auc').format(
                                i[4], i[0], i[1], i[2], i[3], i[2] * i[3], conf.emoji.get(i[1])
                            )

                        await msg.answer(auc)

                case '/auc':
                    await msg.answer(
                        conf.read('aucc')
                    )


                case 'üß™ –í–∞—Ä–∏—Ç—å –∑–µ–ª—å—è':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                        await msg.answer(
                            '–í—ã–±–µ—Ä–∏—Ç–µ –∑–µ–ª—å–µ –Ω–∏–∂–µ',
                            reply_markup=menu.Potion.markup
                        )

                case 'üí™ –°–ª–æ–Ω–æ–≤—å—è —è—Ä–æ—Å—Ç—å':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                        potion = '–î–ª—è –≤–∞—Ä–∫–∏ –∑–µ–ª—å—è –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è:\n\n' \
                                 'üçì <b>–ú–∞–ª–∏–Ω–∞</b> ~ 20 {0}\n' \
                                 'üçí <b>–í–∏—à–Ω—è</b> ~ 25 {1}\n' \
                                 'ü´ê <b>–ó–µ–º–ª—è–Ω–∏–∫–∞</b> ~ 15 {2}\n' \
                                 'ü¶∑ <b>–ö–ª—ã–∫</b> ~ 3 {3}\n' \

                        isc = [
                            '‚úÖ' if db.get(chat.id, 'items', '–ú–∞–ª–∏–Ω–∞')[0]    >= 20 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'items', '–í–∏—à–Ω—è')[0]     >= 25 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'items', '–ó–µ–º–ª—è–Ω–∏–∫–∞')[0] >= 15 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'hunter', '–ö–ª—ã–∫')[0]     >= 3  else '‚ùå', 
                        ]

                        if isc != ['‚úÖ','‚úÖ','‚úÖ','‚úÖ']:
                            await msg.answer(
                                potion.format(*isc)
                            )
                        else:
                            await msg.answer(
                                potion.format(*isc),
                                reply_markup=menu.PotionDone.power
                            )

                case 'üõ° –ß–µ—Ä–µ–ø–∞—à—å—è –º–æ—â—å':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                        potion = '–î–ª—è –≤–∞—Ä–∫–∏ –∑–µ–ª—å—è –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è:\n\n' \
                                 'üçì <b>–ú–∞–ª–∏–Ω–∞</b> ~ 15 {0}\n' \
                                 'üçí <b>–í–∏—à–Ω—è</b> ~ 20 {1}\n' \
                                 'ü´ê <b>–ó–µ–º–ª—è–Ω–∏–∫–∞</b> ~ 30 {2}\n' \
                                 'üê¢ <b>–ü–∞–Ω—Ü–∏—Ä—å</b> ~ 3 {3}\n' \

                        isc = [
                            '‚úÖ' if db.get(chat.id, 'items', '–ú–∞–ª–∏–Ω–∞')[0]    >= 15 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'items', '–í–∏—à–Ω—è')[0]     >= 20 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'items', '–ó–µ–º–ª—è–Ω–∏–∫–∞')[0] >= 30 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'hunter', '–ü–∞–Ω—Ü–∏—Ä—å')[0]  >= 3  else '‚ùå', 
                        ]

                        if isc != ['‚úÖ','‚úÖ','‚úÖ','‚úÖ']:
                            await msg.answer(
                                potion.format(*isc)
                            )
                        else:
                            await msg.answer(
                                potion.format(*isc),
                                reply_markup=menu.PotionDone.protection
                            )

                case 'üçÄ –£–¥–∞—á–∞ –Ø–º–∞–≥—É—á–∏':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                        potion = '–î–ª—è –≤–∞—Ä–∫–∏ –∑–µ–ª—å—è –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è:\n\n' \
                                 'üçì <b>–ú–∞–ª–∏–Ω–∞</b> ~ 15 {0}\n' \
                                 'üçí <b>–í–∏—à–Ω—è</b> ~ 20 {1}\n' \
                                 'ü´ê <b>–ó–µ–º–ª—è–Ω–∏–∫–∞</b> ~ 30 {2}\n' \
                                 'üß¨ <b>–°–≥—É—Å—Ç–æ–∫</b> ~ 3 {3}\n' \

                        isc = [
                            '‚úÖ' if db.get(chat.id, 'items', '–ú–∞–ª–∏–Ω–∞')[0]    >= 15 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'items', '–í–∏—à–Ω—è')[0]     >= 20 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'items', '–ó–µ–º–ª—è–Ω–∏–∫–∞')[0] >= 30 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'hunter', '–°–≥—É—Å—Ç–æ–∫')[0]  >= 3  else '‚ùå', 
                        ]

                        if isc != ['‚úÖ','‚úÖ','‚úÖ','‚úÖ']:
                            await msg.answer(
                                potion.format(*isc)
                            )
                        else:
                            await msg.answer(
                                potion.format(*isc),
                                reply_markup=menu.PotionDone.luck
                            )

                case '‚ù§Ô∏è –ê—Å—Ü–∏–¥–∏–µ–≤–∞ –∂–∏–≤—É—á–µ—Å—Ç—å':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                        potion = '–î–ª—è –≤–∞—Ä–∫–∏ –∑–µ–ª—å—è –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è:\n\n' \
                                 'üçì <b>–ú–∞–ª–∏–Ω–∞</b> ~ 20 {0}\n' \
                                 'üçí <b>–í–∏—à–Ω—è</b> ~ 20 {1}\n' \
                                 'ü´ê <b>–ó–µ–º–ª—è–Ω–∏–∫–∞</b> ~ 20 {2}\n' \
                                 'üå± <b>–ú–æ—Ö</b> ~ 3 {3}\n' \

                        isc = [
                            '‚úÖ' if db.get(chat.id, 'items', '–ú–∞–ª–∏–Ω–∞')[0]    >= 20 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'items', '–í–∏—à–Ω—è')[0]     >= 20 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'items', '–ó–µ–º–ª—è–Ω–∏–∫–∞')[0] >= 20 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'hunter', '–ú–æ—Ö')[0]      >= 3  else '‚ùå', 
                        ]

                        if isc != ['‚úÖ','‚úÖ','‚úÖ','‚úÖ']:
                            await msg.answer(
                                potion.format(*isc)
                            )
                        else:
                            await msg.answer(
                                potion.format(*isc),
                                reply_markup=menu.PotionDone.health
                            )

                case '‚ö°Ô∏è –≠–Ω–µ—Ä–≥–µ—Ç–∏–∫':
                    if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                        potion = '–î–ª—è –≤–∞—Ä–∫–∏ –∑–µ–ª—å—è –≤–∞–º –ø–æ–Ω–∞–¥–æ–±–∏—Ç—å—Å—è:\n\n' \
                                 'üçì <b>–ú–∞–ª–∏–Ω–∞</b> ~ 20 {0}\n' \
                                 'üçí <b>–í–∏—à–Ω—è</b> ~ 20 {1}\n' \
                                 'ü´ê <b>–ó–µ–º–ª—è–Ω–∏–∫–∞</b> ~ 20 {2}\n' \

                        isc = [
                            '‚úÖ' if db.get(chat.id, 'items', '–ú–∞–ª–∏–Ω–∞')[0]    >= 20 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'items', '–í–∏—à–Ω—è')[0]     >= 20 else '‚ùå', 
                            '‚úÖ' if db.get(chat.id, 'items', '–ó–µ–º–ª—è–Ω–∏–∫–∞')[0] >= 20 else '‚ùå', 
                        ]

                        if isc != ['‚úÖ','‚úÖ','‚úÖ']:
                            await msg.answer(
                                potion.format(*isc)
                            )
                        else:
                            await msg.answer(
                                potion.format(*isc),
                                reply_markup=menu.PotionDone.energy
                            )


                case _:
                    response = msg.text.split(' ')
                    if len(response) == 4 and response[0].lower() == '–≤—ã—Å—Ç–∞–≤–∏—Ç—å':
                        try:
                            response[1] = response[1].capitalize()
                            response[2] = int(response[2])
                            response[3] = int(response[3])

                            
                            for k, v in conf.all_items.items():
                                if response[1] in v:
                                    if db.get(chat.id, k, response[1])[0] >= response[2]:
                                        db.bring(chat.id, response[1], k, response[2])
                                        db.set_auc(chat.id, response[1], response[2], response[3])
                                        await msg.answer(
                                            '–í—ã —É—Å–ø–µ—à–Ω–æ –≤—ã—Å—Ç–∞–≤–∏–ª–∏ —Å–≤–æ–π —Ç–æ–≤–∞—Ä'
                                        )

                        except Exception as e:
                            print(e)

                    elif len(response) == 2 and response[0].lower() == '–∫—É–ø–∏—Ç—å':
                        try:
                            auc_item = db.item_auc(response[1])
                            if auc_item[0] != chat.id:
                                print(auc_item)
                                total_price = int(auc_item[2] * auc_item[3])
                                if db.get(chat.id, 'users', 'balance')[0] >= total_price:
                                    db.bring_auc(auc_item[4])

                                    for k, v in conf.all_items.items():
                                        if auc_item[1] in v:
                                            db.add_item(
                                                chat.id, auc_item[1],
                                                k, auc_item[2]
                                            )

                                    db.bring(
                                        id=chat.id,
                                        table='users',
                                        field='balance',
                                        amount=total_price
                                    )
                                    db.add_item(
                                        id=auc_item[0],
                                        table='users',
                                        field='balance',
                                        amount=total_price
                                    )

                                    await msg.answer(
                                        '–í—ã —É—Å–ø–µ—à–Ω–æ –ø—Ä–∏–æ–±—Ä–µ–ª–∏ –ø—Ä–µ–¥–º–µ—Ç'
                                    )

                        except Exception as e:
                            print(e)

                    elif response[0] == '/text' and chat.id == 920747145:
                        response.remove('/text')

                        text = ' '.join(response)
                        text += f'\n\n<a href="tg://user?id={bot.id}"><b><u>[–°–æ–æ–±—â–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –±–æ—Ç–∞]</u></b></a>'

                        await msg.answer(
                            f'–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∫–∞–Ω–∞–ª:\n\n"{text}"',
                            reply_markup=im(row_width=2, inline_keyboard=[
                                [ib('–û—Ç–ø—Ä–∞–≤–∏—Ç—å', callback_data='isSend')],
                                [ib('–ù–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å', callback_data='notSend')]
                            ])
                        )
                        conf.isSend = text


@dp.callback_query_handler(text='r10')
async def get_text(call: CallbackQuery):
    chat = call.message.chat
    msg = call.message
    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                if db.get(chat.id, 'users', 'balance')[0] >= 10:

                    try:
                        await msg.delete()
                    except Exception as e:
                        print(e)

                    if not choice([True, True, True, True, True, False]):
                        db.add_item(chat.id, 'balance', 'users', 10)

                        await msg.answer(
                            '–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 10$'
                        )
                    else:
                        db.bring(id=chat.id, field='balance', table='users', amount=10)

                        await msg.answer(
                            '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ 10$'
                        )

@dp.callback_query_handler(text='r100')
async def get_text(call: CallbackQuery):
    chat = call.message.chat
    msg = call.message
    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                if db.get(chat.id, 'users', 'balance')[0] >= 100:

                    try:
                        await msg.delete()
                    except Exception as e:
                        print(e)

                    if not choice([True, True, True, True, True, False]):
                        db.add_item(chat.id, 'balance', 'users', 100)

                        await msg.answer(
                            '–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 100$'
                        )
                    else:
                        db.bring(id=chat.id, field='balance', table='users', amount=100)

                        await msg.answer(
                            '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ 100$'
                        )

@dp.callback_query_handler(text='r500')
async def get_text(call: CallbackQuery):
    chat = call.message.chat
    msg = call.message
    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                if db.get(chat.id, 'users', 'balance')[0] >= 500:

                    try:
                        await msg.delete()
                    except Exception as e:
                        print(e)

                    if not choice([True, True, True, True, True, False]):
                        db.add_item(chat.id, 'balance', 'users', 500)

                        await msg.answer(
                            '–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 500$'
                        )
                    else:
                        db.bring(id=chat.id, field='balance', table='users', amount=500)

                        await msg.answer(
                            '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ 500$'
                        )

@dp.callback_query_handler(text='r1000')
async def get_text(call: CallbackQuery):
    chat = call.message.chat
    msg = call.message
    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                if db.get(chat.id, 'users', 'balance')[0] >= 1000:

                    try:
                        await msg.delete()
                    except Exception as e:
                        print(e)

                    if not choice([True, True, True, True, True, False]):
                        db.add_item(chat.id, 'balance', 'users', 1000)

                        await msg.answer(
                            '–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ 1000$'
                        )
                    else:
                        db.bring(id=chat.id, field='balance', table='users', amount=1000)

                        await msg.answer(
                            '–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ 1000$'
                        )


@dp.callback_query_handler(text='l10')
async def get_text(call: CallbackQuery):
    chat = call.message.chat
    msg = call.message
    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                if db.get(chat.id, 'users', 'balance')[0] >= 10:

                    db.bring(chat.id, 'balance', 'users', 10)

                    try:
                        await msg.delete()
                    except Exception as e:
                        print(e)

                    chs = []
                    for i in range(1, 101):
                        if i < 70: chs.append(2)
                        if i > 70 and i <= 87: chs.append(5)
                        if i > 87 and i <= 97: chs.append(10)
                        if i > 97: chs.append(1000)

                    prize = choice(chs)

                    await msg.answer(
                        f'–í–∞—à –ø—Ä–∏–∑ {prize}$'
                    )

                    db.add_item(chat.id, 'balance', 'users', prize)

@dp.callback_query_handler(text='isSend')
async def send_channel(call: CallbackQuery):
    if call.message.chat.id == 920747145:
        await bot.send_message(
            conf.channel,
            conf.isSend
        )

        try:
            await call.message.delete()
        except Exception as e:
            print(e)

@dp.callback_query_handler(text='notSend')
async def send_channel(call: CallbackQuery):
    try:
        await call.message.delete()
    except Exception as e:
        print(e)


@dp.callback_query_handler(text='power')
async def potion(call : CallbackQuery):
    chat = call.message.chat
    msg = call.message
    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                isc = [
                    '‚úÖ' if db.get(chat.id, 'items', '–ú–∞–ª–∏–Ω–∞')[0]    >= 20 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'items', '–í–∏—à–Ω—è')[0]     >= 25 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'items', '–ó–µ–º–ª—è–Ω–∏–∫–∞')[0] >= 15 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'hunter', '–ö–ª—ã–∫')[0]     >= 3  else '‚ùå', 
                ]

                if isc == ['‚úÖ','‚úÖ','‚úÖ','‚úÖ']:
                    try:
                        await msg.delete()
                    except Exception as e:
                        print(e)

                    await msg.answer(
                        '–í—ã —É—Å–ø–µ—à–Ω–æ —Å–≤–∞—Ä–∏–ª–∏ –∑–µ–ª—å–µ'
                    )

                    db.bring(chat.id, '–ú–∞–ª–∏–Ω–∞', 'items', 20)
                    db.bring(chat.id, '–í–∏—à–Ω—è', 'items', 25)
                    db.bring(chat.id, '–ó–µ–º–ª—è–Ω–∏–∫–∞', 'items', 15)
                    db.bring(chat.id, '–ö–ª—ã–∫', 'hunter', 3)

                    db.add_item(chat.id, 'power', 'potions', 1)

@dp.callback_query_handler(text='protection')
async def potion(call : CallbackQuery):
    chat = call.message.chat
    msg = call.message
    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                isc = [
                    '‚úÖ' if db.get(chat.id, 'items', '–ú–∞–ª–∏–Ω–∞')[0]    >= 15 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'items', '–í–∏—à–Ω—è')[0]     >= 20 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'items', '–ó–µ–º–ª—è–Ω–∏–∫–∞')[0] >= 30 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'hunter', '–ü–∞–Ω—Ü–∏—Ä—å')[0]  >= 3  else '‚ùå', 
                ]

                if isc == ['‚úÖ','‚úÖ','‚úÖ','‚úÖ']:
                    try:
                        await msg.delete()
                    except Exception as e:
                        print(e)

                    await msg.answer(
                        '–í—ã —É—Å–ø–µ—à–Ω–æ —Å–≤–∞—Ä–∏–ª–∏ –∑–µ–ª—å–µ'
                    )

                    db.bring(chat.id, '–ú–∞–ª–∏–Ω–∞', 'items', 15)
                    db.bring(chat.id, '–í–∏—à–Ω—è', 'items', 20)
                    db.bring(chat.id, '–ó–µ–º–ª—è–Ω–∏–∫–∞', 'items', 30)
                    db.bring(chat.id, '–ü–∞–Ω—Ü–∏—Ä—å', 'hunter', 3)

                    db.add_item(chat.id, 'protection', 'potions', 1)

@dp.callback_query_handler(text='health')
async def potion(call : CallbackQuery):
    chat = call.message.chat
    msg = call.message
    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                isc = [
                    '‚úÖ' if db.get(chat.id, 'items', '–ú–∞–ª–∏–Ω–∞')[0]    >= 20 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'items', '–í–∏—à–Ω—è')[0]     >= 20 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'items', '–ó–µ–º–ª—è–Ω–∏–∫–∞')[0] >= 20 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'hunter', '–ú–æ—Ö')[0]      >= 3  else '‚ùå', 
                ]

                if isc == ['‚úÖ','‚úÖ','‚úÖ','‚úÖ']:
                    try:
                        await msg.delete()
                    except Exception as e:
                        print(e)

                    await msg.answer(
                        '–í—ã —É—Å–ø–µ—à–Ω–æ —Å–≤–∞—Ä–∏–ª–∏ –∑–µ–ª—å–µ'
                    )

                    db.bring(chat.id, '–ú–∞–ª–∏–Ω–∞', 'items', 20)
                    db.bring(chat.id, '–í–∏—à–Ω—è', 'items', 20)
                    db.bring(chat.id, '–ó–µ–º–ª—è–Ω–∏–∫–∞', 'items', 20)
                    db.bring(chat.id, '–ú–æ—Ö', 'hunter', 3)

                    db.add_item(chat.id, 'health', 'potions', 1)

@dp.callback_query_handler(text='luck')
async def potion(call : CallbackQuery):
    chat = call.message.chat
    msg = call.message
    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                isc = [
                    '‚úÖ' if db.get(chat.id, 'items', '–ú–∞–ª–∏–Ω–∞')[0]    >= 50 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'items', '–í–∏—à–Ω—è')[0]     >= 30 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'items', '–ó–µ–º–ª—è–Ω–∏–∫–∞')[0] >= 50 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'hunter', '–°–≥—É—Å—Ç–æ–∫')[0]  >= 3  else '‚ùå', 
                ]

                if isc == ['‚úÖ','‚úÖ','‚úÖ','‚úÖ']:
                    try:
                        await msg.delete()
                    except Exception as e:
                        print(e)

                    await msg.answer(
                        '–í—ã —É—Å–ø–µ—à–Ω–æ —Å–≤–∞—Ä–∏–ª–∏ –∑–µ–ª—å–µ'
                    )

                    db.bring(chat.id, '–ú–∞–ª–∏–Ω–∞', 'items', 50)
                    db.bring(chat.id, '–í–∏—à–Ω—è', 'items', 30)
                    db.bring(chat.id, '–ó–µ–º–ª—è–Ω–∏–∫–∞', 'items', 50)
                    db.bring(chat.id, '–°–≥—É—Å—Ç–æ–∫', 'hunter', 3)

                    db.add_item(chat.id, 'luck', 'potions', 1)

@dp.callback_query_handler(text='energy')
async def potion(call : CallbackQuery):
    chat = call.message.chat
    msg = call.message
    if chat.id > 0:
        if not db.check(chat.id):
            await msg.answer(
                conf.read('non').format(
                    chat.id, chat.first_name
                ),
                reply_markup=menu.Main.markup
            )

            db.add_user(chat.id)
        else:
            if db.get(chat.id, 'users', 'lock')[0] == '–õ–∞–≥–µ—Ä—å':
                isc = [
                    '‚úÖ' if db.get(chat.id, 'items', '–ú–∞–ª–∏–Ω–∞')[0]    >= 20 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'items', '–í–∏—à–Ω—è')[0]     >= 20 else '‚ùå', 
                    '‚úÖ' if db.get(chat.id, 'items', '–ó–µ–º–ª—è–Ω–∏–∫–∞')[0] >= 20 else '‚ùå',
                ]

                if isc == ['‚úÖ','‚úÖ','‚úÖ']:
                    try:
                        await msg.delete()
                    except Exception as e:
                        print(e)

                    await msg.answer(
                        '–í—ã —É—Å–ø–µ—à–Ω–æ —Å–≤–∞—Ä–∏–ª–∏ –∑–µ–ª—å–µ'
                    )

                    db.bring(chat.id, '–ú–∞–ª–∏–Ω–∞', 'items', 20)
                    db.bring(chat.id, '–í–∏—à–Ω—è', 'items', 20)
                    db.bring(chat.id, '–ó–µ–º–ª—è–Ω–∏–∫–∞', 'items', 20)

                    db.add_item(chat.id, 'energy', 'potions', 1)


""" --------------------------------------------------- """

if __name__ == "__main__":
    try:
        executor.start_polling(
            dp, skip_updates=True
        )
    except Exception as e:
        print(e)
